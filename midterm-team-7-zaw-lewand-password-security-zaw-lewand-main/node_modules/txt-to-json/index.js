const { promisify } = require('util')
const fs = require('fs')

const readFile = promisify(fs.readFile)
const stat = promisify(fs.stat)
const writeFile = promisify(fs.writeFile)

const path = require('path')

const txtToJson = async function (txtFile, keyFilter = defaultKeyFilter, lineFilter = defaultLineFilter) {
  const stats = await stat(txtFile)
  if (!stats.isFile()) throw new Error('Invalid file provided.')
  if (!path.isAbsolute(txtFile)) txtFile = path.resolve(process.cwd(), txtFile)
  const file = await readFile(txtFile, { encoding: 'utf8' })

  const output = {}
  const lines = lineFilter(file)
  for (const line of lines) {
    const [key, value] = keyFilter(line)
    output[key] = value
  }

  const outputJson = JSON.stringify(output)
  await writeFile('./output.json', outputJson, { encoding: 'utf8' })
  return true
}

module.exports = txtToJson

function defaultLineFilter (doc) {
  return doc.split('\n')
}

function defaultKeyFilter (line) {
  return line.split(':')
}
